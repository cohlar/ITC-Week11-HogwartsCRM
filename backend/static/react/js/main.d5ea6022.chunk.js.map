{"version":3,"sources":["pages/Dashboard.js","lib/api.js","components/StudentsList.js","pages/Students.js","pages/StudentCard.js","components/MagicSkillForm.js","components/CoursesMultiSelect.js","pages/CreateStudent.js","components/Header.js","components/NavItem.js","components/SideNav.js","components/Inexisting.js","App.js","serviceWorker.js","index.js"],"names":["Dashboard","baseUrl","createStudent","firstname","lastname","magicSkills","courses","payload","axios","post","getStudentById","id","get","StudentsList","props","students","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","background","default","TableRow","TableContainer","component","Paper","Table","aria-label","TableHead","align","TableBody","map","student","key","scope","created","lastupdated","to","className","Students","useState","setStudents","useEffect","a","async","response","data","console","log","toString","length","StudentCard","useParams","setStudent","magicskills","MagicSkillForm","setParentMagicSkill","index","magicSkill","setMagicSkill","skillType","setSkillType","skillLevel","setSkillLevel","handleChange","value","callback","Grid","item","xs","InputLabel","Select","labelId","onChange","e","target","skill","MenuItem","RadioGroup","name","row","FormControlLabel","control","Radio","label","Typography","gutterBottom","Slider","val","valueLabelDisplay","aria-labelledby","min","max","step","defaultValue","marks","course_list","useStyles","makeStyles","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","getStyles","course","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","CoursesMultiSelect","classes","useTheme","onChangeHandler","FormControl","multiple","input","Input","renderValue","selected","Chip","CreateStudent","setFirstname","setLastname","setMagicSkills","setCourses","userMessage","setUserMessage","setMagicSkillByIndex","new_skill","skills","container","TextField","Button","variant","onClick","preventDefault","setTimeout","type","status","message","Header","src","alt","NavItem","imgName","path","exact","navList","SideNav","navElement","Inexisting","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"js/main.d5ea6022.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <main>\r\n            I'm a dashboard\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = 'http://127.0.0.1:5000/';\r\n\r\nexport function createStudent(firstname, lastname, magicSkills, courses) {\r\n    const apiPath = 'api/students/create';\r\n    const payload = {\r\n        'firstname': firstname,\r\n        'lastname': lastname,\r\n        'magicskills': magicSkills,\r\n        'courses': courses,\r\n    }\r\n    return axios.post(baseUrl + apiPath, payload);\r\n}\r\n\r\nexport function getStudents() {\r\n    const apiPath = 'api/students/get';\r\n    return axios.get(baseUrl + apiPath);\r\n}\r\n\r\nexport function getStudentById(id) {\r\n    const apiPath = 'api/students/get';\r\n    return axios.get(baseUrl + apiPath + '/' + id);\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nfunction StudentsList(props) {\r\n    const { students } = props;\r\n\r\n    const StyledTableCell = withStyles(theme => ({\r\n        head: {\r\n            backgroundColor: theme.palette.common.black,\r\n            color: theme.palette.common.white,\r\n        },\r\n        body: {\r\n            fontSize: 14,\r\n        },\r\n    }))(TableCell);\r\n\r\n    const StyledTableRow = withStyles(theme => ({\r\n        root: {\r\n            '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.background.default,\r\n            },\r\n        },\r\n    }))(TableRow);\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table aria-label=\"student-list\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell>Id</StyledTableCell>\r\n                        <StyledTableCell>First Name</StyledTableCell>\r\n                        <StyledTableCell>Last Name</StyledTableCell>\r\n                        <StyledTableCell>Created (UTC)</StyledTableCell>\r\n                        <StyledTableCell>Last Updated (UTC)</StyledTableCell>\r\n                        <StyledTableCell align='right'>Actions</StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {students.map(student => (\r\n                        <StyledTableRow key={student.id}>\r\n                            <StyledTableCell component=\"th\" scope=\"row\">\r\n                                {student.id}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell>{student.firstname}</StyledTableCell>\r\n                            <StyledTableCell>{student.lastname}</StyledTableCell>\r\n                            <StyledTableCell>{student.created}</StyledTableCell>\r\n                            <StyledTableCell>{student.lastupdated}</StyledTableCell>\r\n                            <StyledTableCell align='right'>\r\n                                <NavLink to={'/student-card/' + student.id} className='student-card-link'>\r\n                                    View Details\r\n                                </NavLink>\r\n                            </StyledTableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n\r\nexport default StudentsList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getStudents } from '../lib/api.js';\r\nimport StudentsList from '../components/StudentsList.js'\r\n\r\nfunction Students() {\r\n    const [students, setStudents] = useState([]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const response = await getStudents(1);\r\n                setStudents(response.data);\r\n            }\r\n            catch (error) {\r\n                // setErrorMessage();\r\n                console.log(error.toString());\r\n            }\r\n\r\n        })();\r\n    }, [])\r\n\r\n    return (\r\n        <main>\r\n            {students.length === 0 &&\r\n                <>\r\n                    Loading...\r\n                </>\r\n            }\r\n            {students.length > 0 &&\r\n                <StudentsList students={students} />\r\n            }\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Students;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getStudentById } from '../lib/api.js';\r\n\r\nfunction StudentCard(props) {\r\n    const { id } = useParams(); \r\n    const [student, setStudent] = useState(null);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const response = await getStudentById(id);\r\n                setStudent(response.data);\r\n            }\r\n            catch (error) {\r\n                // setErrorMessage();\r\n                console.log(error.toString());\r\n            }\r\n\r\n        })();\r\n    }, [id])\r\n\r\n    return (\r\n        <main>\r\n            {!student &&\r\n                <>\r\n                    Loading...\r\n                </>\r\n            }\r\n            {student &&\r\n                <div>\r\n                    <p>\r\n                        ID: {student.id}\r\n                    </p>\r\n                    <p>\r\n                        First Name: {student.firstname}\r\n                    </p>\r\n                    <p>\r\n                        Last Name: {student.lastname}\r\n                    </p>\r\n                    <p>\r\n                        Existing Magic Skillz:\r\n                    </p>\r\n                    <p>\r\n                        Desired Magic Skillz:\r\n                    </p>\r\n                    <p>\r\n                        Interested in Courses:\r\n                    </p>\r\n                    <p>\r\n                        Created On: {student.created}\r\n                    </p>\r\n                    <p>\r\n                        Updated On: {student.lastupdated}\r\n                    </p>\r\n                </div>\r\n            }\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default StudentCard;\r\n","import React, { useState } from 'react';\r\nimport { Grid, FormControlLabel, InputLabel, Select, MenuItem, RadioGroup, Radio, Slider, Typography } from '@material-ui/core';\r\n\r\n// Pass these from the server\r\nconst magicskills = ['Alchemy', 'Animation', 'Conjuror', 'Disintegration', 'Elemental', 'Healing', 'Illusion', 'Immortality', 'Invisibility',\r\n    'Invulnerability', 'Necromancer', 'Omnipresent', 'Omniscient', 'Poison', 'Possession', 'Self-detonation', 'Summoning', 'Water breathing']\r\n\r\nfunction MagicSkillForm(props) {\r\n    const { setParentMagicSkill, index } = props;\r\n\r\n    const [magicSkill, setMagicSkill] = useState('');\r\n    const [skillType, setSkillType] = useState('');\r\n    const [skillLevel, setSkillLevel] = useState('');\r\n\r\n    const handleChange = (value, callback) => {\r\n        callback(value);\r\n        const new_skill = {\r\n            'skill': magicSkill,\r\n            'skilltype': skillType,\r\n            'level': skillLevel,\r\n        }\r\n        setParentMagicSkill(index, new_skill);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid item xs={4}>\r\n                <InputLabel id='magic-skill-label'>Magic skill</InputLabel>\r\n                <Select\r\n                    labelId='magic-skill-label'\r\n                    onChange={(e) => handleChange(e.target.value, setMagicSkill)}\r\n                >\r\n                    {magicskills.map((skill) =>\r\n                        <MenuItem key={skill} value={skill}>{skill}</MenuItem>\r\n                    )}\r\n                </Select>\r\n            </Grid>\r\n\r\n            <Grid item xs={4}>\r\n                <RadioGroup\r\n                    aria-label='skill-type'\r\n                    name='skill-type'\r\n                    onChange={(e) => handleChange(e.target.value, setSkillType)}\r\n                    row\r\n                >\r\n                    <FormControlLabel value='existing' control={<Radio />} label='Existing' />\r\n                    <FormControlLabel value='desired' control={<Radio />} label='Desired' />\r\n                </RadioGroup>\r\n            </Grid>\r\n\r\n            <Grid item xs={4}>\r\n                <Typography id=\"magic-skill-level-label\" gutterBottom>\r\n                    Skill Level\r\n                </Typography>\r\n                <Slider\r\n                    onChange={(e, val) => handleChange(val, setSkillLevel)}\r\n                    valueLabelDisplay='auto'\r\n                    aria-labelledby='magic-skill-level-label'\r\n                    min={1}\r\n                    max={5}\r\n                    step={1}\r\n                    defaultValue={1}\r\n                    marks={true}\r\n                />\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MagicSkillForm;\r\n","import React from 'react';\r\nimport { FormControl, InputLabel, Select, MenuItem, Input, Chip } from '@material-ui/core';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\n// Pass these from the server\r\nconst course_list = ['Alchemy basics', 'Alchemy advanced', 'Magic for day-to-day life',\r\n    'Magic for medical professionals', 'Dating with magic']\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        maxWidth: 600,\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n    noLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction getStyles(course, courses, theme) {\r\n    return {\r\n        fontWeight:\r\n            courses.indexOf(course) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n}\r\n\r\n\r\nfunction CoursesMultiSelect(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const { courses, onChangeHandler } = props;\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <InputLabel id='courses-label'>Courses</InputLabel>\r\n            <Select\r\n                labelId='courses-label'\r\n                multiple\r\n                input={<Input id='select-multiple-chip' />}\r\n                value={courses}\r\n                onChange={onChangeHandler}\r\n                renderValue={selected => (\r\n                    <div className={classes.chips}>\r\n                        {selected.map((value) =>\r\n                            <Chip key={value} label={value} className={classes.chip} />\r\n                        )}\r\n                    </div>\r\n                )}\r\n                MenuProps={MenuProps}\r\n            >\r\n                {course_list.map((course) =>\r\n                    <MenuItem\r\n                        key={course}\r\n                        value={course}\r\n                        style={getStyles(course, courses, theme)}\r\n                    >\r\n                        {course}\r\n                    </MenuItem>\r\n                )}\r\n            </Select>\r\n        </FormControl >\r\n    );\r\n}\r\n\r\nexport default CoursesMultiSelect;\r\n","import React, { useState } from 'react';\r\nimport { Grid, TextField, Button } from '@material-ui/core';\r\nimport { createStudent } from '../lib/api.js';\r\nimport MagicSkillForm from '../components/MagicSkillForm.js';\r\nimport CoursesMultiSelect from '../components/CoursesMultiSelect.js';\r\n\r\nfunction CreateStudent() {\r\n    const [firstname, setFirstname] = useState('');\r\n    const [lastname, setLastname] = useState('');\r\n    const [magicSkills, setMagicSkills] = useState([]);\r\n    const [courses, setCourses] = useState([]);\r\n    const [userMessage, setUserMessage] = useState({ 'status': null, 'message': null });\r\n\r\n    function setSuccessMessage() {\r\n        setUserMessage({\r\n            'status': 'success',\r\n            'message': 'Student has been successfully added to the database.'\r\n        });\r\n\r\n        setTimeout(() => {\r\n            setUserMessage({ 'status': null, 'message': null })\r\n        }, 5000);\r\n    }\r\n\r\n    function setErrorMessage() {\r\n        setUserMessage({\r\n            'status': 'error',\r\n            'message': 'There has been an error, please try again later (please see console for additional information).'\r\n        });\r\n\r\n        setTimeout(() => {\r\n            setUserMessage({ 'status': null, 'message': null })\r\n        }, 5000);\r\n    }\r\n\r\n    function setMagicSkillByIndex(index, new_skill) {\r\n        const skills = magicSkills;\r\n        skills[index] = new_skill;\r\n        setMagicSkills(skills);\r\n    }\r\n\r\n    async function onSumbitHandler(e) {\r\n        e.preventDefault();\r\n        try {\r\n            await createStudent(firstname, lastname, magicSkills, courses);\r\n            setSuccessMessage();\r\n            setFirstname('');\r\n            setLastname('');\r\n        }\r\n        catch (error) {\r\n            setErrorMessage();\r\n            console.log(error.response);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <form>\r\n                <Grid container spacing={3}>\r\n\r\n                    <Grid item xs={6}>\r\n                        <TextField id='firstname' label='First Name' onChange={(e) => setFirstname(e.target.value)} />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField id='lastname' label='Last Name' onChange={(e) => setLastname(e.target.value)} />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        Magic Skills:\r\n                    </Grid>\r\n\r\n                    {magicSkills.map((skill, index) =>\r\n                        <MagicSkillForm key={index} setParentMagicSkill={setMagicSkillByIndex} index={index} />\r\n                    )}\r\n\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            variant='contained'\r\n                            onClick={() => setMagicSkills([...magicSkills, {}])}\r\n                        >\r\n                            Add Magic Skill\r\n                        </Button>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        Interested in Courses:\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <CoursesMultiSelect\r\n                            courses={courses}\r\n                            onChangeHandler={(e) => setCourses(e.target.value)}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Button variant='contained' onClick={onSumbitHandler} type='submit'>\r\n                            Create\r\n                        </Button>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        {userMessage.status &&\r\n                            <div className={userMessage.status}>\r\n                                {userMessage.message}\r\n                            </div>\r\n                        }\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </form>\r\n        </main >\r\n    );\r\n}\r\n\r\nexport default CreateStudent;\r\n","import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <img src='/static/img/logo_white.png' alt='Hogwarts CRM Logo' />\r\n            <span></span>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction NavItem(props) {\r\n    const { name, imgName, path } = props;\r\n    return (\r\n        <NavLink exact to={path} className='nav-element'>\r\n            <img className='nav-icon' src={'/static/img/icons/' + imgName} alt='dashboard icon' />\r\n            {name}\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport default NavItem;\r\n","import React from 'react';\r\nimport NavItem from './NavItem.js';\r\n\r\nconst navList = [\r\n    { 'name': 'Dashboard',      'imgName': 'dashboard.png',     'path': '/'             },\r\n    { 'name': 'Students',       'imgName': 'student-list.png',  'path': '/students'     },\r\n    { 'name': 'Student Card',   'imgName': 'student-card.png',  'path': '/student-card' },\r\n    { 'name': 'Create Student', 'imgName': 'create-student.png','path': '/create-student'  }\r\n]\r\n\r\nfunction SideNav() {\r\n    return (\r\n        <nav>\r\n            {navList.map((navElement) => {\r\n                return (\r\n                    <NavItem\r\n                        name={navElement.name}\r\n                        imgName={navElement.imgName}\r\n                        path={navElement.path}\r\n                        key={navElement.imgName}\r\n                    />\r\n                );\r\n            })}\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default SideNav;\r\n","import React from 'react';\r\n\r\nfunction Inexisting() {\r\n    return (\r\n        <main>\r\n            Sorry, this page does not exist... you shouldn't mess with the URLs! :)\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Inexisting;\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport './App.css';\nimport Dashboard from './pages/Dashboard.js';\nimport Students from './pages/Students.js';\nimport StudentCard from './pages/StudentCard.js';\nimport CreateStudent from './pages/CreateStudent.js';\nimport Header from './components/Header.js';\nimport SideNav from './components/SideNav.js';\nimport Inexisting from './components/Inexisting.js';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Router>\n\n        <Header />\n\n        <section id='content'>\n          <SideNav />\n\n          <Switch>\n            <Route exact path='/'>\n              <Dashboard />\n            </Route>\n            <Route path='/students'>\n              <Students />\n            </Route>\n            <Route path='/student-card/:id'>\n              <StudentCard />\n            </Route>\n            <Route path='/create-student'>\n              <CreateStudent />\n            </Route>\n            <Route path='/*'>\n              <Inexisting />\n            </Route>\n          </Switch>\n\n        </section>\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}